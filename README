/**Java library for mapping phylogenetic trees and geographical information in KML
Written by Kathryn Iverson kd.iverson@gmail.com May 2010*/

All code in this library is owned by the origional author(s) and their licenses apply to that code. Any code written by me (Kathryn Iverson) is clearly marked and licened under the GPL as follows:

/*
 *  Copyright (C) 2010 Kathryn Iverson <kd.iverson at gmail.com>
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

I've tried to make the directions as clear as possible, but if they seem a little terse please feel free to contact me if you're having problems getting geoPhyloRef to work. I'm always trying to make my projects better and more useful so if there's something missing or a feature you'd like to see let me know! More info on the project can be found at the project blog here: http://phylogeoref.blogspot.com/ or the project wiki here: https://www.nescent.org/wg_phyloinformatics/PhyloSoC:phyloGeoRef

Cheers,
Kathryn
kd.iverson@gmail.com

=========================

Perequisites:

*JAXB is required for KML to work! You can find it here: https://jaxb.dev.java.net/
To install it cd to the directory where you downloaded it and type: java -jar JAXB2_200xxxxx.jar where JAXB2_200xxxxx.jar is the jarfile you downloaded.

The libraries that need to be in your java classpath are:
activation.jar
jaxb-api.jar
jaxb-impl.jar
jsr173_1.0_api

These are found in jaxb-ri-200xxxxx/bin (created after you ran the java -jar command above.

If you're using NetBeans you can right-click on your project from the sidebar and click libraries and add the path to these files there. I'm not familiar with other IDEs but it's probably a similar set-up. More info on this can be found here: http://labs.micromata.de/display/jak/FAQ

=========================

Using geoPhyloRef:

The best way to integrate geoPhyloRef into your project is to use the package within your code. I've tried to provide helpful comments for all the functions that explain how and when to use them. There are also some javadocs for the functions that I've written. The docs for the other code I've used in my library can be found at their respective websites although if you're using this library you shouldn't have to know anything about the other libraries I've included. There should be functions within geoPhyloRef to allow access to data objects created by these other libraries.

That's it! Go ahead and have some fun. There's a tutorial with a simple example on the github wiki: http://wiki.github.com/kdiverson/phyloGeoRef/

